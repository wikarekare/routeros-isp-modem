---
# Making wild assumption that a dhcp server has a static IP.
- name: build dhcp_server_network from bridge.interface_vlans
  ansible.builtin.set_fact:
    dhcp_server: >
      {{
        dhcp_server | default([]) +
        [
          {
            'name': 'dhcp_' + item.1.name,
            'interface': item.1.name,
            'address-pool': "dhcp_pool_" + item.1.name,
            'allow-dual-stack-queue': item.1['allow-dual-stack-queue'] | default(omit),
            'always-broadcast': item.1['always-broadcast'] | default(omit),
            'authoritative': item.1.authoritative | default(omit),
            'bootp-lease-time': item.1['bootp-lease-time'] | default(omit),
            'bootp-support': item.1['bootp-support'] | default(omit),
            'client-mac-limit': item.1['client-mac-limit'] | default(omit),
            'comment': item.1.comment | default(omit),
            'conflict-detection': item.1['conflict-detection'] | default(omit),
            'delay-threshold': item.1['delay-threshold'] | default(omit),
            'dhcp-option-set': item.1['dhcp-option-set'] | default(omit),
            'disabled': item.1.disabled | default(omit),
            'insert-queue-before': item.1['insert-queue-before'] | default(omit),
            'lease-script': item.1['lease-script'] | default(omit),
            'lease-time': item.1['lease-time'] | default(omit),
            'parent-queue': item.1['parent-queue'] | default(omit),
            'relay': item.1.relay | default(omit),
            'server-address': item.1['server-address'] | default(omit),
            'use-framed-as-classless': item.1['use-framed-as-classless'] | default(omit),
            'use-radius': item.1['use-radius'] | default(omit)
          }
        ]
      }}
  when: item.1.dhcp_server is defined
  with_subelements:
    - "{{ bridge }}"
    - interface_vlans
    - skip_missing: True

# Making wild assumption that a dhcp server has a static IP.
- name: build dhcp_server_network from bridge.interface_vlans
  ansible.builtin.set_fact:
    dhcp_server: >
      {{
        dhcp_server | default([]) +
        [
          {
            'name': 'dhcp_' + item.name,
            'interface': item.name,
            'address-pool': "dhcp_pool_" + item.name,
            'allow-dual-stack-queue': item['allow-dual-stack-queue'] | default(omit),
            'always-broadcast': item['always-broadcast'] | default(omit),
            'authoritative': item.authoritative | default(omit),
            'bootp-lease-time': item['bootp-lease-time'] | default(omit),
            'bootp-support': item['bootp-support'] | default(omit),
            'client-mac-limit': item['client-mac-limit'] | default(omit),
            'comment': item.comment | default(omit),
            'conflict-detection': item['conflict-detection'] | default(omit),
            'delay-threshold': item['delay-threshold'] | default(omit),
            'dhcp-option-set': item['dhcp-option-set'] | default(omit),
            'disabled': item.disabled | default(omit),
            'insert-queue-before': item['insert-queue-before'] | default(omit),
            'lease-script': item['lease-script'] | default(omit),
            'lease-time': item['lease-time'] | default(omit),
            'parent-queue': item['parent-queue'] | default(omit),
            'relay': item.relay | default(omit),
            'server-address': item['server-address'] | default(omit),
            'use-framed-as-classless': item['use-framed-as-classless'] | default(omit),
            'use-radius': item['use-radius'] | default(omit)
          }
        ]
      }}
  when: item.dhcp_server is defined
  loop: "{{ bridge + ethernet_interfaces }}"

- name: Debug dhcp_server with Bridge and Ethernet interfaces
  ansible.builtin.debug:
    var: dhcp_server
  when: dhcp_server is defined

#/ip dhcp-server
# This fails if you change the name of the dhcp server entry.
- name: DHCP Server Config
  community.routeros.api_modify:
    path: "ip dhcp-server"
    data: "{{ dhcp_server }}"
