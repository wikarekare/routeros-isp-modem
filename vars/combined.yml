---
# Note for Ansible variables with '-'s we have substituted '_' or we get an Ansible error with loops

# Settings for ethernet interfaces.
ethernet_interfaces:
  - { name: ether2, poe_out: "off" }
  - { name: ether3, poe_out: "off" }
  - { name: ether4, poe_out: "off" }
  - { name: ether5, poe_out: "off" }
  # - { name: sfp1, auto_negotiation: "no", speed: 1G-baseT-full  }

# Interfaces can be grouped by name for use in some config items
interface_lists:
  - MGMT:
      # Physical Management interface
      - interface: bridgeLocal
        dhcp:
          client: true
      # Virtual management interface
      - interface: vlan88
        vlan_id: 88
        ip: &mgmt_ip "{{ mgmt_ip }}"
        network: "{{ mgmt_network }}"
        mask_bits: "{{ mgmt_mask_bits }}"
        #dhcp:
        #  server:
        #    range: "{{ mgmt_dhcp_range }}"
        #    dns_server: *mgmt_ip
  #
  - LAN:
      - interface: vlan1
        vlan_id: 1
        ip: &lan_ip "{{ lan_ip }}"
        network: "{{ lan_network }}"
        mask_bits: "{{ lan_mask_bits }}"
        gateway: &lan_gw "{{ lan_gw }}"
        dhcp:
          server:
            range: "{{ dhcp_range }}"
            dns_server: *lan_ip
            gateway: *lan_ip
        routes:
        # Routes to stop private network IPs trying to route to world
        - { dst_address: "10.0.0.0/8", gateway: *lan_gw }
        - { dst_address: "172.16.0.0/12", gateway: *lan_gw }
        - { dst_address: "169.254.0.0/16", gateway: *lan_gw }
        - { dst_address: "100.64.0.0/22", gateway: *lan_gw }
  #
  - WAN:
      - interface: vlan10
        vlan_id: 10
        dhcp:
          client: true

bridge:
  # Default configuration
  - name: "bridgeLocal"
    switch_mac: "{{ def_switch_mac }}"
    comment: defconf
    interfaces:
      # Left ether5 on the default bridge during configuration.
      - { interface: ether5 }
      - { interface: sfp1 }
  # New bridge for our setup
  - name: "bridge1"
    comment: "switch"
    switch_mac: "{{ br1_switch_mac }}"
    interfaces:
      - { interface: ether1, hw: "yes" }
      - { interface: ether2, hw: "yes" }
      - { interface: ether3, hw: "yes" }
      - { interface: ether4, hw: "yes" }
      # - { interface: ether5, hw: "yes" }
    interface_vlans:
      - { vlan_id: "1", untagged_ports: "ether1,ether2,ether3,switch1-cpu" }
      - { vlan_id: "10", tagged_ports: "ether4,switch1-cpu" }
      - { vlan_id: "88", tagged_ports: "ether1,ether2,ether3,switch1-cpu" }

# Repeat bridge settings for switch (look at merging with brige.interface_vlans)
switch:
  # LAN ports are untagged vlan 1
  - { default_vlan_id: "1", port: "ether1", vlan_mode: "fallback", vlan_header: "leave-as-is" }
  - { default_vlan_id: "1", port: "ether2", vlan_mode: "fallback", vlan_header: "leave-as-is" }
  - { default_vlan_id: "1", port: "ether3", vlan_mode: "fallback", vlan_header: "leave-as-is" }
  # WAN ports are tagged vlan 10
  - { default_vlan_id: "10", port: "ether4", vlan_mode: "secure", vlan_header: "leave-as-is" }
  # Don't break management access
  - { port: "ether5", vlan_mode: "fallback", vlan_header: "leave-as-is" }
  - { port: "switch1-cpu", vlan_mode: "fallback", vlan_header: "leave-as-is" }

discovery_protocol:
  protocol: "lldp"
  interface_list: LAN

firewall_rules2:
  # input chain
  - { action: accept, chain: input, comment: "accept established,related,untracked", connection-state: "established,related,untracked" }
  - { action: drop, chain: input, comment: "drop invalid", connection-state: "invalid" }
  - { action: accept, chain: input, comment: "accept ICMP", protocol: icmp }
  - { action: accept, chain: input, comment: "accept to local loopback (for CAPsMAN)", dst-address: "127.0.0.1" }
  - { action: accept, chain: input, comment: "Allow Management Port", in-interface-list: "MGMT" }
  - { action: drop, chain: input, comment: "drop all not coming from LAN", in-interface-list: "!LAN" }
  # Forward chain
  - { action: accept, chain: forward, comment: "accept in ipsec policy", ipsec-policy: "in,ipsec" }
  - { action: accept, chain: forward, comment: "accept out ipsec policy", ipsec-policy: "out,ipsec" }
  # the following rule get duplicated every run
  - { action: "fasttrack-connection", chain: forward, comment: "fasttrack", connection-state: "established,related", hw-offload: "yes"}
  - { action: accept, chain: forward, comment: "accept established,related,untracked", connection-state: "established,related,untracked" }
  - { action: drop, chain: forward, comment: "drop invalid", connection-state: "invalid" }
  - { action: drop, chain: forward, comment: "drop all from WAN not DSTNATed", connection-nat-state: "!dstnat", connection-state: "new", in-interface-list: "WAN" }
nat_rules2:
  - { action: masquerade, chain: srcnat, comment: "masquerade", ipsec-policy: "out,none", out-interface-list: "WAN" }
  - { action: dst-nat, chain: dstnat, in-interface-list: "WAN", comment: http, protocol: tcp, src-port: 80, to-addresses: "{{webserver}}", to-ports: 80 }
  - { action: dst-nat, chain: dstnat, in-interface-list: "WAN", comment: http, protocol: tcp, src-port: 443, to-addresses: "{{webserver}}", to-ports: 443 }
